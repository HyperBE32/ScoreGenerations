#pragma once

class Player
{
public:
	static void CreateInput()
	{
		auto optionData = FrontiersInput::GetOptionData();

		if (optionData == nullptr)
			return;

		if (optionData->header.status == FrontiersInput::STATUS_ZERO_FILL)
			return;

		InputHelper::Instance->SetInputMap
		(
			std::unordered_map<int, int>
			{
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_Jump),
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_StompAttack),
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_LightDash),
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_QuickStepLeft),
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_QuickStepRight)
			}
		);

		InputHelper::Instance->SetTriggerMap
		(
			std::unordered_map<int, int>
			{
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_Boost),
				FINPUT.GetVirtualKeysFromActionType(FrontiersInput::ActionType_ACT_SonicBoom)
			}
		);

		InputHelper::Instance->SetAnalogMap
		(
			std::unordered_map<int, InputHelper::AnalogKey>
			{
				{ VK_PAD_LTHUMB_UP, InputHelper::AnalogKey(FrontiersInput::ActionType_ACT_MoveForward, FrontiersInput::ActionType_ACT_MoveBack) },
				{ VK_PAD_LTHUMB_LEFT, InputHelper::AnalogKey(FrontiersInput::ActionType_ACT_MoveLeft, FrontiersInput::ActionType_ACT_MoveRight) },
				{ VK_PAD_RTHUMB_UP, InputHelper::AnalogKey(FrontiersInput::ActionType_ACT_MoveForward, FrontiersInput::ActionType_ACT_MoveBack) },
				{ VK_PAD_RTHUMB_LEFT, InputHelper::AnalogKey(FrontiersInput::ActionType_ACT_MoveLeft, FrontiersInput::ActionType_ACT_MoveRight) },
			}
		);
	}

	static void Install();
};

// Function Pointers
CL_SCAN_SIGNATURE(m_SigSetCurrentState, "\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x48\x8B\xD9\x41\x8B\xF8\x48\x81\xC1\x88\x00\x00\x00\x8B\xF2\xE8\xCC\xCC\xCC\xCC\x3B", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx????x");
CL_SCAN_SIGNATURE(m_SigPlayAnimation, "\x40\x53\x48\x83\xEC\x20\xF6\x81\x78\x01\x00\x00\x10\x48\x8B\xDA", "xxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigSetAnimationParameter, "\x40\x53\x48\x83\xEC\x30\x48\x8B\x81\x10\x01\x00\x00\x48\x8B\xDA", "xxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigPlayEffect, "\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x48\x8B\xF2\x48\x8B\xF9\xE8\xCC\xCC\xCC\xCC\x48\x8B\xD8", "xxxxxxxxxxxxxxxxxxxxxx????xxx");
CL_SCAN_SIGNATURE(m_SigStopEffects, "\x40\x53\x48\x83\xEC\x20\x48\x89\xCB\xE8\xCC\xCC\xCC\xCC\x48\x85\xC0", "xxxxxxxxxx????xxx");
CL_SCAN_SIGNATURE(m_SigPlaySound, "\x4C\x8B\xDC\x49\x89\x5B\x08\x57\x48\x81\xEC\x80\x00\x00\x00", "xxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStopSoundCaller, "\xE8\xCC\xCC\xCC\xCC\x48\x8B\xCF\xE8\xCC\xCC\xCC\xCC\x33\xD2\x48\x8B\xCF\xF3\x0F\x10\x90\x90\x00\x00\x00", "x????xxxx????xxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigGetFxParamBulletTimeExtensionCaller, "\xE8\xCC\xCC\xCC\xCC\x48\x85\xC0\x74\x0B\x0F\x28\xCF\x48\x8B\xC8\xE8\xCC\xCC\xCC\xCC\xE8", "x????xxxxxxxxxxxx????x");
CL_SCAN_SIGNATURE(m_SigGetStatePluginCollision, "\x40\x56\x48\x83\xEC\x20\x48\x8B\x41\x38\x48\x8B\xB0\x08\x01\x00\x00\x48\x85\xF6\x74\x65\x48\x8B\x46\x20\x48\x89\x5C\x24\x30\x48\x8B\x5E\x18\x48\x89\x7C\x24\x38\x48\x8D\x3C\xC3\x48\x3B\xDF\x74\x19\x48\x8B\x0B\x48\x8B\x01\xFF\x50\xCC\x3D\x8E\xB4\x47\x3B", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx?xxxxx");
CL_SCAN_SIGNATURE(m_SigTogglePlayerEntityCollision, "\x40\x53\x48\x83\xEC\x20\x48\x8B\x41\x50\x0F\xB6\xDA", "xxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigSetCollisionSphere, "\x40\x53\x48\x83\xEC\x50\x0F\x28\x05\xCC\xCC\xCC\xCC\x48\x8B\xD9\x88\x54\x24\x20", "xxxxxxxxx????xxxxxxx");
CL_SCAN_SIGNATURE(m_SigStartBulletTime, "\x48\x8B\xC4\x48\x89\x58\x10\x48\x89\x70\x20\x55\x57\x41\x56\x48\x8D\x68\xA1\x48\x81\xEC\xB0\x00\x00\x00\x80\x79\x24\x00", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigEndBulletTime, "\x40\x53\x48\x83\xEC\x30\x80\x79\x24\x00", "xxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigSendMessageToGameObjectCaller, "\xE8\xCC\xCC\xCC\xCC\x48\x8D\x4D\xB0\xE8\xCC\xCC\xCC\xCC\x48\x8B\x15\xCC\xCC\xCC\xCC\x0F\x28\x74\x24\x60", "x????xxxxx????xxx????xxxxx");
CL_SCAN_SIGNATURE(m_SigCheckInput, "\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x20\x48\x63\xFA\xE8\xCC\xCC\xCC\xCC\x48\x8B\xD8\xE8\xCC\xCC\xCC\xCC\x48\x8B\xD0\x48\x8B\xCB\xE8\xCC\xCC\xCC\xCC\x48\x8B\x5C\x24\x30\x48\x8B\x80\x90\x00\x00\x00\x48\x8B\x48\x78\x0F\xB6\x44\xF9\x07\xD0\xE8", "xxxxxxxxxxxxxx????xxxx????xxxxxxx????xxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigGetPlugin, "\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x20\x48\x8B\x59\x18\x8B\xEA", "xxxxxxxxxxxxxxxxxxxxxxxxxx");

// Hooks
CL_SCAN_SIGNATURE(m_SigStateDropDashStart, "\x48\x89\x5C\x24\x10\x48\x89\x6C\x24\x18\x56\x57\x41\x56\x48\x83\xEC\x50\x48\x8B\xE9\x48\x8B\xF2", "xxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateDropDashUpdate, "\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x30\x48\x8B\xF1\x0F", "xxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateDropDashExit, "\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x20\x48\x8B\xD9\x48\x8B\xFA\x48\x8B\xCA\xE8\xCC\xCC\xCC\xCC\xB2", "xxxxxxxxxxxxxxxxxxxx????x");
CL_SCAN_SIGNATURE(m_SigPostureDropDashUpdate, "\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x81\xEC\x90\x00\x00\x00\x48\x8B\x71\x18", "xxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinBoostChargeStart, "\x48\x8B\xC4\x48\x89\x58\x10\x48\x89\x68\x18\x48\x89\x70\x20\x57\x48\x83\xEC\x70\xF3\x0F\x10\x05", "xxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinBoostChargeUpdate, "\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x70\x48\x8B\xFA\x48\x8B\xF1", "xxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinBoostChargeExit, "\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x48\x8B\x42\x38\x48\x8B\xF1\x41\x8B\xF8", "xxxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinBoostStart, "\x48\x89\x5C\x24\x10\x48\x89\x6C\x24\x20\x56\x57\x41\x56\x48\x83\xEC\x50\x45\x8B\xF0", "xxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinBoostUpdate, "\x48\x89\x5C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x60\x0F\x29\x74\x24\x50", "xxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinMoveStart, "\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x48\x89\x7C\x24\x20\x41\x56\x48\x83\xEC\x40\x48\x8B\xCA\x48\x8B\xFA", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSpinMoveUpdate, "\x40\x57\x48\x81\xEC\x30\x01\x00\x00\x48\x8B\xCA\x48\x8B\xFA\xE8\xCC\xCC\xCC\xCC\x48\x8B\xCF", "xxxxxxxxxxxxxxxx????xxx");
CL_SCAN_SIGNATURE(m_SigStateSpinMoveExit, "\x48\x89\x5C\x24\x10\x56\x48\x83\xEC\x50\x48\x8B\x4A\x48", "xxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigCommonStateFallExit, "\x48\x89\x5C\x24\x18\x48\x89\x6C\x24\x20\x57\x48\x83\xEC\x70\x0F\xB6\xDA", "xxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateSquatUpdate, "\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x0F\xB6\x99\xB0\x00\x00\x00", "xxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStatePluginAirTrickUpdate, "\x48\x89\x5C\x24\x10\x48\x89\x74\x24\x18\x55\x57\x41\x56\x48\x8D\x6C\x24\xB9\x48\x81\xEC\xC0\x00\x00\x00\x48\x8B\x71\x20", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStatePluginBoostUpdate, "\x40\x53\x48\x83\xEC\x30\x48\x8B\xD9\x0F\x29\x74\x24\x20\x48\x8B\x49\x20\xBA", "xxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStatePluginBoostRechargeMode, "\x40\x53\x48\x83\xEC\x20\x0F\xBE\x91\x84\x00\x00\x00", "xxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateFallSlopeUpdate, "\x48\x89\x5C\x24\x18\x48\x89\x74\x24\x20\x57\x48\x83\xEC\x40\x48\x8B\xF1\x0F\x29\x74\x24\x30\x8B\x89\xA8\x00\x00\x00\x0F\x28\xF2\x48\x8B\xFA\x85\xC9\x0F\x84\x8D", "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateGrindJumpUpdate, "\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x40\x48\x8B\xDA\x48\x8B\xF9\xE8\xCC\xCC\xCC\xCC\xB2\x01", "xxxxxxxxxxxxxxxxx????xx");
CL_SCAN_SIGNATURE(m_SigStateStompingDownUpdate, "\x48\x89\x5C\x24\x18\x48\x89\x7C\x24\x20\x55\x48\x8D\x6C\x24\xA9\x48\x81\xEC\xC0\x00\x00\x00", "xxxxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateDoubleJumpUpdate, "\x48\x89\x5C\x24\x10\x57\x48\x83\xEC\x30\x0F\xB6\x81", "xxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateRecoveryJumpUpdate, "\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x30\x48\x8B\xFA\x0F\x29\x74\x24\x20\x48\x8B\xF1", "xxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigStateStompingLandUpdate, "\x40\x53\x56\x57\x48\x83\xEC\x60\x48\x8B\xFA", "xxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigSendMoveImpulse, "\x40\x55\x56\x57\x48\x8D\xAC\x24\xE0\xFE\xFF\xFF", "xxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigObjFanProcessMessage, "\x48\x89\x5C\x24\x08\x55\x56\x57\x48\x8D\x6C\x24\xB9\x48\x81\xEC\x00\x01\x00\x00\x44", "xxxxxxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigGOCPlayerHsmUpdate, "\x40\x53\x55\x48\x83\xEC\x28\x49", "xxxxxxxx");
CL_SCAN_SIGNATURE(m_SigGOCPlayerHsmGroundStateUpdate, "\x40\x53\x41\x56\x41\x57\x48\x83\xEC\x20\xF6\x81\x1C", "xxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigPlayerKinematicsGroundUpdate, "\x48\x8B\xC4\x55\x56\x48\x8D\x68\xA1\x48\x81\xEC\xF8\x00\x00\x00\x48", "xxxxxxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigPlayerKinematicsAirUpdateCaller, "\xE8\xCC\xCC\xCC\xCC\x80\xBF\x10\x01\x00\x00\x00", "x????xxxxxxx");
CL_SCAN_SIGNATURE(m_SigStartSpinChargeCamera, "\x48\x89\x74\x24\x18\x48\x89\x7C\x24\x20\x41\x56\x48\x83\xEC\x20\x48\x8B\x41\x28\x45\x33\xF6\x48\x8B\xF2", "xxxxxxxxxxxxxxxxxxxxxxxxxx");

// Required Patches
CL_SCAN_SIGNATURE(m_SigDisableSpinChargeCamera, "\x75\x3F\xBA\x05\x00\x00\x00", "xxxxxxx");
CL_SCAN_SIGNATURE(m_SigDisableSpinChargeDeceleration, "\xE8\xCC\xCC\xCC\xCC\x0F\xB6\x5E\x28", "x????xxxx");
CL_SCAN_SIGNATURE(m_SigDisableSpinChargeMovement, "\x0F\x85\x83\x02\x00\x00\x0F\x10\x9F\x20\x01\x00\x00", "xxxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigDisableSpinChargePitchReset, "\xE8\xCC\xCC\xCC\xCC\xB8\x60\x00\x00\x00\x48\x8D\x93\x50\x01\x00\x00", "x????xxxxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigDisableSpinChargeFromSpinMove, "\xE8\xCC\xCC\xCC\xCC\x84\xC0\x0F\x85\x36\x01\x00\x00\xB2\x01", "x????xxxxxxxxxx");
CL_SCAN_SIGNATURE(m_SigDisableSpinBoostFromSpinMove, "\x74\x26\x48\x8B\xC8\xE8\xCC\xCC\xCC\xCC\x84\xC0\x74\x1A", "xxxxxx????xxxx");
CL_SCAN_SIGNATURE(m_SigDisableSpinMoveExitInput, "\x74\x10\x48\x8B\xC8\xE8\xCC\xCC\xCC\xCC\x0F\x57\xC9\x0F\x2F\xC1\x76\x36", "xxxxxx????xxxxxxxx");

// Patches
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigDropDashCameraDelay, "\x73\x2A\xF3\x0F\x10\x05\xCC\xCC\xCC\xCC\x45\x33\xC9", "xxxxxx????xxx");
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigPreventSquatToSlide, "\x75\x27\x45\x31\xC0\x48\x89\xF9", "xxxxxxxx");
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigForceGrindJumpPosture, "\x73\x09\x0F\x28\x1D\xCC\xCC\xCC\xCC\xEB\x35\x0F\x2F\xDA", "xxxxx????xxxxx");
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigFixDropDashSideView, "\x74\x10\x0F\x28\xCF", "xxxxx");
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigCanRecoveryJump, "\xE8\xCC\xCC\xCC\xCC\x84\xC0\x74\x26\x45\x31\xC0", "x????xxxxxxx");
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigInfiniteBoostGaugeCode, "\xF3\x0F\x11\x4F\x3C\x48\x8B\xCF", "xxxxxxxx");
CL_SCAN_SIGNATURE_ALLOW_NULL(m_SigDisableSpinChargeCameraCode, "\xE8\xCC\xCC\xCC\xCC\x48\x8B\xCF\xE8\xCC\xCC\xCC\xCC\x48\x8B\xC8\x45\x33\xC0\xB2\x24", "x????xxxx????xxxxxxxx");